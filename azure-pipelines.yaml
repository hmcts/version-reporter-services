name: Version Reporter Service Jobs

trigger:
  branches:
    include:
      - master

pool:
  vmImage: ubuntu-latest

variables:
  - name: timeoutInMinutes
    value: 60
  - name: project
    value: "versionreporter"
  - name: product
    value: "vrs"
  - name: terraformInitSubscription
    value: "04d27a32-7a07-48b3-95b8-3c8691e1a263"
  - name: action
    value: ${{ parameters.action }}
  - template: vars/input-variables.yaml@cnp-azuredevops-libraries

resources:
  repositories:
    - repository: cnp-azuredevops-libraries
      type: github
      ref: master
      name: hmcts/cnp-azuredevops-libraries
      endpoint: 'hmcts'

parameters:
  - name: location
    displayName: Location
    type: string
    default: "UK South"
    values:
      - "UK South"

  - name: overrideAction
    type: string
    default: plan
    values:
      - plan
      - apply
      - destroy

  - name: action
    displayName: Action
    type: string
    default: plan
    values:
      - plan
      - apply

  - name: env
    displayName: Environment
    type: object
    default:
      - name: "stg"
      - name: "prod"

  - name: reports
    displayName: Report to build
    type: object
    default:
      - name: "helm"
      - name: "paloalto"

stages:
  - stage: Precheck
    jobs:
      - job:
        timeoutInMinutes: ${{ variables.timeoutInMinutes }}
        steps:
          - template: steps/terraform-precheck.yaml@cnp-azuredevops-libraries
            parameters:
              keyvaultName: 'infra-vault-nonprod'
              keyvaultSecret: 'azure-devops-token'
              serviceConnection: 'DCD-CFT-Sandbox'
              overrideAction: ${{ parameters.overrideAction }}

  - ${{ each environment in parameters.env }}:
  - stage: "DB Infrastructure ${{ environment.name }}"
    displayName: "DB Infrastructure ${{ environment.name }}"
    jobs:
      - job:
        steps:
          - script: echo Hello, Version Reporter DB!
            displayName: 'Executing ${{environment.name}} db'

  - ${{ each environment in parameters.env }}:
  - stage:
      jobs:
        - job:
            - ${{ each report in parameters.reports }}:
              steps:
                - template: "reports/${{report.name}}/build.yaml"
                - script: echo Hello, Version Reporter!
                  displayName: 'Executing ${{environment.name}} report ${{report.name}}'
